[{"/Users/bryan/Documents/opensource/defiance/client/src/index.js":"1","/Users/bryan/Documents/opensource/defiance/client/src/pages/MissionControl.js":"2","/Users/bryan/Documents/opensource/defiance/client/src/assets/SocketStatus.js":"3","/Users/bryan/Documents/opensource/defiance/client/src/assets/DynamicDriverList.js":"4","/Users/bryan/Documents/opensource/defiance/client/src/components/store-list/store-list.component.jsx":"5","/Users/bryan/Documents/opensource/defiance/client/src/components/store-item/store-item.component.jsx":"6","/Users/bryan/Documents/opensource/defiance/client/src/assets/MapContainer.js":"7","/Users/bryan/Documents/opensource/defiance/client/src/App.js":"8","/Users/bryan/Documents/opensource/defiance/client/src/pages/home/home.component.jsx":"9","/Users/bryan/Documents/opensource/defiance/client/src/components/material-ui/nav-bar/nav-bar.component.jsx":"10","/Users/bryan/Documents/opensource/defiance/client/src/components/material-ui/header/header.component.jsx":"11"},{"size":608,"mtime":1609443004666,"results":"12","hashOfConfig":"13"},{"size":3581,"mtime":1609554677214,"results":"14","hashOfConfig":"13"},{"size":1535,"mtime":1609552252033,"results":"15","hashOfConfig":"13"},{"size":1319,"mtime":1609554146664,"results":"16","hashOfConfig":"13"},{"size":587,"mtime":1609448530950,"results":"17","hashOfConfig":"13"},{"size":479,"mtime":1609542362365,"results":"18","hashOfConfig":"13"},{"size":1983,"mtime":1609448063863,"results":"19","hashOfConfig":"13"},{"size":668,"mtime":1609524092707,"results":"20","hashOfConfig":"13"},{"size":133,"mtime":1609441793940,"results":"21","hashOfConfig":"13"},{"size":1353,"mtime":1609542210756,"results":"22","hashOfConfig":"13"},{"size":242,"mtime":1609523608161,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"103utdr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},"/Users/bryan/Documents/opensource/defiance/client/src/index.js",[],["51","52"],"/Users/bryan/Documents/opensource/defiance/client/src/pages/MissionControl.js",["53"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport SocketStatus from \"../assets/SocketStatus\";\nimport DynamicDriverList from \"../assets/DynamicDriverList\";\nimport MapContainer from \"../assets/MapContainer\";\nimport StoreList from \"../components/store-list/store-list.component\";\nimport \"./missioncontrol.styles.scss\";\nimport { isEqual, clone } from \"lodash\";\n\n/*\n\nPosition's state changes drivers position state\n\nduring socket inialization \n\n*/\nexport default function MissionControl() {\n  // Renders the Map Mark\n  const [drivers, setDrivers] = useState([\n    {\n      firstName: \"Felipe\",\n      lastName: \"Rodas\",\n      employeeId: 3533,\n      position: {\n        coords: {\n          accuracy: 5,\n          altitude: 0,\n          latitude: 26.259,\n          longitude: -80.27,\n        },\n        mocked: false,\n        timestamp: 5325324523,\n      },\n    },\n    {\n      firstName: \"George\",\n      lastName: \"Marrone\",\n      employeeId: 4545,\n\n      position: {\n        coords: {\n          accuracy: 5,\n          altitude: 0,\n          latitude: 26.3,\n          longitude: -80.27,\n        },\n        mocked: false,\n        timestamp: 5325324523,\n      },\n    },\n  ]);\n  const [position, setPosition] = useState({\n    id: 3533,\n    position: {\n      coords: {\n        accuracy: 5,\n        altitude: 0,\n        latitude: 26.259,\n        longitude: -80.27,\n      },\n      mocked: false,\n      timestamp: 5325324523,\n    },\n  });\n\n  const [loadSocket, setLoadSocket] = useState(false);\n\n  const [store, setStore] = useState({ store: {} });\n\n  function GetPreviousPosition(value) {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  }\n  const prevPosition = GetPreviousPosition(position);\n  //Updates the drivers position whenever position changes in the socket\n  useEffect(() => {\n    // Compare prevPosition and current position then SetDrivers()\n    // This elimnate infinite loop and dependency Error\n    if (isEqual(prevPosition, position) === false) {\n      //Create a copy of\n      let drivers_clone = clone(drivers).map((driver) => {\n        if (driver.employeeId === position.id) {\n          driver.position = position.position;\n        }\n        return driver;\n      });\n      setDrivers(drivers_clone);\n    }\n  }, [position, drivers]);\n  let latpos = position.position.coords.latitude;\n\n  return (\n    <div>\n      <div className=\"map\">\n        <MapContainer store={store.store} drivers={drivers} />\n        {loadSocket ? (\n          <div className=\"socket-dynamicdrivers\">\n            <SocketStatus\n              store={store}\n              handleConnect={handleStore}\n              setPosition={setPosition}\n            />\n            <DynamicDriverList drivers={drivers} />\n          </div>\n        ) : (\n          <StoreList handleConnect={handleStore} />\n        )}\n      </div>\n\n      <div className=\"bottom-bar\">\n        <button\n          onClick={() =>\n            setPosition({\n              id: 3533,\n              position: {\n                coords: {\n                  accuracy: 5,\n                  altitude: 0,\n                  latitude: latpos + 0.001,\n                  longitude: -80.27,\n                },\n                mocked: false,\n                timestamp: 5325324523,\n              },\n            })\n          }\n        >\n          changePos\n        </button>\n      </div>\n    </div>\n  );\n  function handleStore(store) {\n    setStore({\n      store: { name: store.name, id: store.number, location: store.location },\n    });\n    setLoadSocket((prevState) => !prevState);\n  }\n}\n","/Users/bryan/Documents/opensource/defiance/client/src/assets/SocketStatus.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/assets/DynamicDriverList.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/components/store-list/store-list.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/components/store-item/store-item.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/assets/MapContainer.js",["54"],"import React, { useState, useEffect } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"100%\",\n  height: \"100%\",\n  borderRadius: \"10px\",\n};\n\nconst defaultCenter = {\n  lat: 26.27260777215995,\n  lng: -80.27339459701001,\n};\n\nexport default function MapContainer(props) {\n  const [map, setMap] = useState(null);\n  const [zoom, setZoom] = useState(15);\n  const [center, setCenter] = useState({\n    lat: 26.27260777215995,\n    lng: -80.27339459701001,\n  });\n  const [driverMarkers, setDriverMarkers] = useState([]);\n\n  useEffect(() => {\n    if (props.store.location) {\n      setCenter(props.store.location);\n      setZoom(14);\n    } else {\n      setCenter(defaultCenter);\n      setZoom(12);\n    }\n  }, [props.store]);\n\n  useEffect(() => {\n    const markers = [];\n\n    //sets the drivers position\n    props.drivers.forEach((driver) => {\n      if (driver.position) {\n        markers.push(\n          <Marker\n            key={driver._id}\n            label={driver.firstName}\n            position={{\n              lat: driver.position.coords.latitude,\n              lng: driver.position.coords.longitude,\n            }}\n            onPositionChanged={() => {\n              console.log(\"position changed\");\n            }}\n          />\n        );\n      }\n    });\n    setDriverMarkers(markers);\n  }, [props.drivers]);\n\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n\n  return (\n    <LoadScript googleMapsApiKey={process.env.REACT_APP_google_map_api}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={zoom}\n        onLoad={onLoad}\n        onUnmount={onUnmount}\n      >\n        {driverMarkers ? driverMarkers : null}\n      </GoogleMap>\n    </LoadScript>\n  );\n}\n","/Users/bryan/Documents/opensource/defiance/client/src/App.js",["55"],"/Users/bryan/Documents/opensource/defiance/client/src/pages/home/home.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/components/material-ui/nav-bar/nav-bar.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/components/material-ui/header/header.component.jsx",["56"],"import React from \"react\";\nimport \"./header.styles.scss\";\nimport img from \"./logo.png\";\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <img className=\"header__img\" src={img} />\n    </div>\n  );\n};\n\nexport default Header;\n",["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":92,"column":6,"nodeType":"65","endLine":92,"endColumn":25,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":16,"column":10,"nodeType":"69","messageId":"70","endLine":16,"endColumn":13},{"ruleId":null,"fatal":true,"severity":2,"message":"71","line":10,"column":8},{"ruleId":"72","severity":1,"message":"73","line":7,"column":7,"nodeType":"74","endLine":7,"endColumn":48},{"ruleId":"59","replacedBy":"75"},{"ruleId":"61","replacedBy":"76"},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'prevPosition'. Either include it or remove the dependency array.","ArrayExpression",["79"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","Parsing error: Identifier 'React' has already been declared\n\n   8 | import \"./App.styles.scss\";\n   9 | \n> 10 | import React from \"react\";\n     |        ^\n  11 | \n  12 | const App = () => {\n  13 |   return (","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["77"],["78"],"no-global-assign","no-unsafe-negation",{"desc":"80","fix":"81"},"Update the dependencies array to be: [position, drivers, prevPosition]",{"range":"82","text":"83"},[2294,2313],"[position, drivers, prevPosition]"]