[{"/Users/bryan/Documents/opensource/defiance/client/src/index.js":"1","/Users/bryan/Documents/opensource/defiance/client/src/components/store-list/store-list.component.jsx":"2","/Users/bryan/Documents/opensource/defiance/client/src/components/store-item/store-item.component.jsx":"3","/Users/bryan/Documents/opensource/defiance/client/src/App.js":"4","/Users/bryan/Documents/opensource/defiance/client/src/pages/home/home.component.jsx":"5","/Users/bryan/Documents/opensource/defiance/client/src/pages/missioncontrol/mission-control.component.jsx":"6","/Users/bryan/Documents/opensource/defiance/client/src/components/dynamic-driver/dynamic-driver.componet.jsx":"7","/Users/bryan/Documents/opensource/defiance/client/src/components/socket-status/socket-status.component.jsx":"8","/Users/bryan/Documents/opensource/defiance/client/src/components/dynamic-driverlist/dynamic-driverlist.component.jsx":"9","/Users/bryan/Documents/opensource/defiance/client/src/components-materialui/header/header.component.jsx":"10","/Users/bryan/Documents/opensource/defiance/client/src/components/map-container/map-container.component.jsx":"11","/Users/bryan/Documents/opensource/defiance/client/src/redux/root-saga.js":"12","/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.reducer.js":"13","/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.saga.js":"14","/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.types.js":"15","/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.action.js":"16","/Users/bryan/Documents/opensource/defiance/client/src/redux/store.js":"17","/Users/bryan/Documents/opensource/defiance/client/src/components-materialui/navbar/navbar.component.jsx":"18","/Users/bryan/Documents/opensource/defiance/client/src/redux/root-reducer.js":"19"},{"size":739,"mtime":1609634027154,"results":"20","hashOfConfig":"21"},{"size":830,"mtime":1609654437568,"results":"22","hashOfConfig":"21"},{"size":784,"mtime":1609707772933,"results":"23","hashOfConfig":"21"},{"size":661,"mtime":1609728564221,"results":"24","hashOfConfig":"21"},{"size":133,"mtime":1609555628709,"results":"25","hashOfConfig":"21"},{"size":3786,"mtime":1609692152518,"results":"26","hashOfConfig":"21"},{"size":781,"mtime":1609650957741,"results":"27","hashOfConfig":"21"},{"size":1983,"mtime":1609703465491,"results":"28","hashOfConfig":"21"},{"size":695,"mtime":1609625921699,"results":"29","hashOfConfig":"21"},{"size":254,"mtime":1609646916510,"results":"30","hashOfConfig":"21"},{"size":1616,"mtime":1609616324059,"results":"31","hashOfConfig":"21"},{"size":217,"mtime":1609639754488,"results":"32","hashOfConfig":"21"},{"size":698,"mtime":1609702536448,"results":"33","hashOfConfig":"21"},{"size":652,"mtime":1609703048740,"results":"34","hashOfConfig":"21"},{"size":167,"mtime":1609699716608,"results":"35","hashOfConfig":"21"},{"size":544,"mtime":1609702921459,"results":"36","hashOfConfig":"21"},{"size":514,"mtime":1609645175131,"results":"37","hashOfConfig":"21"},{"size":1637,"mtime":1609653596655,"results":"38","hashOfConfig":"21"},{"size":195,"mtime":1609655918442,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"103utdr",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/Users/bryan/Documents/opensource/defiance/client/src/index.js",[],["82","83"],"/Users/bryan/Documents/opensource/defiance/client/src/components/store-list/store-list.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/components/store-item/store-item.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/App.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/pages/home/home.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/pages/missioncontrol/mission-control.component.jsx",["84"],"import React, { useState, useEffect, useRef } from \"react\";\n\nimport SocketStatus from \"../../components/socket-status/socket-status.component\";\nimport DynamicDriverList from \"../../components/dynamic-driverlist/dynamic-driverlist.component\";\nimport MapContainer from \"../../components/map-container/map-container.component\";\nimport StoreList from \"../../components/store-list/store-list.component\";\nimport { isEqual, clone } from \"lodash\";\nimport \"./missioncontrol.styles.scss\";\nimport { connect } from \"react-redux\";\n/*\nPosition's state changes drivers position state\nduring socket inialization \n*/\n\nconst MissionControl = ({ socket }) => {\n  // Renders the Map Mark\n  const [drivers, setDrivers] = useState([\n    {\n      firstName: \"Felipe\",\n      lastName: \"Rodas\",\n      employeeId: 3533,\n      position: {\n        coords: {\n          accuracy: 5,\n          altitude: 0,\n          latitude: 26.259,\n          longitude: -80.27,\n        },\n        mocked: false,\n        timestamp: 5325324523,\n      },\n    },\n    {\n      firstName: \"George\",\n      lastName: \"Marrone\",\n      employeeId: 4545,\n\n      position: {\n        coords: {\n          accuracy: 5,\n          altitude: 0,\n          latitude: 26.3,\n          longitude: -80.27,\n        },\n        mocked: false,\n        timestamp: 5325324523,\n      },\n    },\n  ]);\n  const [position, setPosition] = useState({\n    id: 3533,\n    position: {\n      coords: {\n        accuracy: 5,\n        altitude: 0,\n        latitude: 26.259,\n        longitude: -80.27,\n      },\n      mocked: false,\n      timestamp: 5325324523,\n    },\n  });\n\n  const [store, setStore] = useState({ store: {} });\n  //callback\n  const handleStore = (store) => {\n    setStore({\n      store: { name: store.name, id: store.number, location: store.location },\n    });\n  };\n\n  const GetPreviousPosition = (value) => {\n    const ref = useRef();\n    useEffect(() => {\n      ref.current = value;\n    });\n    return ref.current;\n  };\n  const prevPosition = GetPreviousPosition(position);\n  //Updates the drivers position whenever position changes in the socket\n  useEffect(() => {\n    // Compares changes between prevPosition and position\n    // This elimnate infinite loop and dependency Error\n    if (isEqual(prevPosition, position) === false) {\n      //Create a copy of\n      let drivers_clone = clone(drivers).map((driver) => {\n        if (driver.employeeId === position.id) {\n          driver.position = position.position;\n        }\n        return driver;\n      });\n      setDrivers(drivers_clone);\n    }\n  }, [position, drivers, prevPosition]);\n  let latpos = position.position.coords.latitude;\n\n  return (\n    <div>\n      <div className=\"map\">\n        {/* <MapContainer store={store.store} drivers={drivers} /> */}\n        {socket ? (\n          <div className=\"socket-dynamicdrivers\">\n            <SocketStatus\n              store={store}\n              handleConnect={handleStore}\n              setPosition={setPosition}\n            />\n            <DynamicDriverList drivers={drivers} />\n          </div>\n        ) : (\n          <StoreList handleConnect={handleStore} />\n        )}\n      </div>\n\n      <div className=\"bottom-bar\">\n        <button\n          onClick={() =>\n            setPosition({\n              id: 3533,\n              position: {\n                coords: {\n                  accuracy: 5,\n                  altitude: 0,\n                  latitude: latpos + 0.001,\n                  longitude: -80.27,\n                },\n                mocked: false,\n                timestamp: 5325324523,\n              },\n            })\n          }\n        >\n          changePos\n        </button>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  socket: state.drivers.socket,\n});\nexport default connect(mapStateToProps, null)(MissionControl);\n","/Users/bryan/Documents/opensource/defiance/client/src/components/dynamic-driver/dynamic-driver.componet.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/components/socket-status/socket-status.component.jsx",[],["85","86"],"/Users/bryan/Documents/opensource/defiance/client/src/components/dynamic-driverlist/dynamic-driverlist.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/components-materialui/header/header.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/components/map-container/map-container.component.jsx",[],["87","88"],"/Users/bryan/Documents/opensource/defiance/client/src/redux/root-saga.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.reducer.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.saga.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.types.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/redux/drivers/drivers.action.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/redux/store.js",[],"/Users/bryan/Documents/opensource/defiance/client/src/components-materialui/navbar/navbar.component.jsx",[],"/Users/bryan/Documents/opensource/defiance/client/src/redux/root-reducer.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":5,"column":8,"nodeType":"95","messageId":"96","endLine":5,"endColumn":20},{"ruleId":"89","replacedBy":"97"},{"ruleId":"91","replacedBy":"98"},{"ruleId":"89","replacedBy":"99"},{"ruleId":"91","replacedBy":"100"},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'MapContainer' is defined but never used.","Identifier","unusedVar",["101"],["102"],["101"],["102"],"no-global-assign","no-unsafe-negation"]